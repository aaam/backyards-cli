{{- if .Values.als.enabled }}
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: als-metadata-fix
  namespace: {{ .Values.istio.namespace }}
spec:
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: ANY
      listener:
        filterChain:
          filter:
            name: envoy.http_connection_manager
    patch:
      operation: INSERT_BEFORE
      value:
        config:
          inlineCode: |
            function envoy_on_request(handle)
              if handle:headers():get("x-envoy-peer-metadata") ~= nil then
                handle:headers():add("x-by-metadata", handle:headers():get("x-envoy-peer-metadata"))
              end

              local headers = handle:headers()
              for key, value in pairs(headers) do
                handle:streamInfo():dynamicMetadata():set("backyards", "request.header."..key, value)
              end
              handle:streamInfo():dynamicMetadata():set("backyards", "request.lua", "run")
            end
            function envoy_on_response(handle)
              if handle:headers():get("x-envoy-peer-metadata") ~= nil then
                handle:headers():add("x-by-metadata", handle:headers():get("x-envoy-peer-metadata"))
              end

              local headers = handle:headers()
              for key, value in pairs(headers) do
                handle:streamInfo():dynamicMetadata():set("backyards", "response.header."..key, value)
              end
              handle:streamInfo():dynamicMetadata():set("backyards", "response.lua", "run")
            end
        name: envoy.lua
{{- end }}
