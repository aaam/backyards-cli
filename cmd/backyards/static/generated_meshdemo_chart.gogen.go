// Code generated by vfsgen; DO NOT EDIT.

// +build prod

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// MeshdemoChart statically implements the virtual filesystem provided to vfsgen.
var MeshdemoChart = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2019, 8, 5, 11, 59, 5, 772858353, time.UTC),
		},
		"/.helmignore": &vfsgen۰CompressedFileInfo{
			name:             ".helmignore",
			modTime:          time.Date(2019, 7, 16, 19, 14, 49, 0, time.UTC),
			uncompressedSize: 342,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xc1\x6a\x23\x31\x0c\x86\xef\x7a\x8a\x7f\x99\xcb\xee\xb0\x78\x1e\x22\xd9\xc3\x9e\x5a\x48\xc9\xb5\x78\x66\x14\x5b\x89\xc7\x36\x96\x26\x69\x7b\xe8\xb3\x97\x24\x84\xf6\xf2\x81\x3e\x24\xf1\x75\x78\xf6\x66\xdc\xb2\xc2\x0a\x24\xe4\xd2\x18\x97\xc8\x19\xe3\x2a\x69\x96\x1c\x50\xfd\x74\xf2\x81\xd5\x51\x87\x97\x28\x0a\x5d\x6b\x2d\xcd\x14\x1a\x39\x25\x84\x54\x46\x2c\xde\xa6\x28\x39\xfc\x45\xe3\xe4\x4d\xce\x8c\xea\x2d\xfe\xf0\x3e\xcf\xd4\x21\x73\xf0\x26\x25\xe3\x77\x6d\x7c\x90\x37\x9e\x71\x11\x8b\xf8\xf5\xc7\xe1\x29\xa7\x77\x94\x7c\xbb\xbc\x26\xa1\x72\x43\x92\xcc\x8e\xdc\x76\xf7\xba\xb3\xd2\x98\x3a\x6c\xca\xb2\x94\x8c\xfd\x66\x87\x59\x9a\x92\x0b\x62\xc3\x8d\xf7\x7c\x72\xe3\x47\x1b\x6e\x7c\x88\x18\x86\x2b\x1e\xa3\x9e\xf3\xf0\xfd\x68\xf4\xd3\x69\xad\x38\x48\x62\xa5\xde\xe9\xa5\x52\xef\x46\x7f\xa2\xde\xd9\x52\xa9\xff\xa4\x0e\x7b\xdf\xa4\xac\x8a\xff\xdb\x7f\x4a\xae\xb6\x72\xe4\xc9\xc8\xc9\xcc\x7e\xb8\xef\xb5\x72\x24\x77\xd6\xa9\xcc\x3c\xd0\x57\x00\x00\x00\xff\xff\xf5\x89\xaa\x2d\x56\x01\x00\x00"),
		},
		"/Chart.yaml": &vfsgen۰FileInfo{
			name:    "Chart.yaml",
			modTime: time.Date(2019, 8, 5, 12, 5, 33, 124087562, time.UTC),
			content: []byte("\x61\x70\x69\x56\x65\x72\x73\x69\x6f\x6e\x3a\x20\x76\x31\x0a\x61\x70\x70\x56\x65\x72\x73\x69\x6f\x6e\x3a\x20\x31\x2e\x30\x0a\x64\x65\x73\x63\x72\x69\x70\x74\x69\x6f\x6e\x3a\x20\x4d\x65\x73\x68\x20\x64\x65\x6d\x6f\x20\x63\x68\x61\x72\x74\x0a\x6e\x61\x6d\x65\x3a\x20\x6d\x65\x73\x68\x64\x65\x6d\x6f\x0a\x76\x65\x72\x73\x69\x6f\x6e\x3a\x20\x30\x2e\x31\x2e\x32\x0a"),
		},
		"/templates": &vfsgen۰DirInfo{
			name:    "templates",
			modTime: time.Date(2019, 8, 5, 11, 59, 5, 772858308, time.UTC),
		},
		"/templates/_helpers.tpl": &vfsgen۰CompressedFileInfo{
			name:             "_helpers.tpl",
			modTime:          time.Date(2019, 7, 16, 19, 14, 49, 0, time.UTC),
			uncompressedSize: 1421,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x94\x41\x6b\xdc\x30\x10\x85\xef\xfe\x15\x83\x69\xa0\x4d\x59\xed\xa1\xd0\xc3\x42\x0e\x25\xed\xa1\x14\x52\x68\x20\x3d\x16\xd9\x1e\xc5\x43\x25\x59\xd1\x48\xdb\x2c\x9b\xfd\xef\x45\x92\xe3\x5d\x77\xb3\x21\xe9\x6d\xb0\x9e\xde\x3c\x7d\x23\x79\xbb\x5d\x9e\xc3\x9a\xcc\x0a\x18\x03\x28\xd2\x18\x36\x0e\x2f\x4c\xe4\x20\xdb\x1e\x57\x70\xbe\xdc\xed\xaa\xa4\xaa\xbe\xdc\x3b\x69\x3b\x08\x3d\x82\x95\x06\x61\x50\xb9\x6e\x7b\xe9\x83\xa8\x46\xdd\x02\x3a\x54\x64\x11\x6a\x83\xdc\x77\x68\x06\x91\xc4\x35\x2c\xf6\xcb\x32\xea\x00\xe2\x32\xef\xbb\x4a\x4e\xe2\x46\xea\x88\x9c\x95\xdf\xd7\xe8\x3d\x75\x08\x0f\x10\x7c\xb4\x2d\x7c\xfc\x90\x4b\x32\xd7\x51\x29\xba\x87\x7a\xb1\x37\x43\xdb\xe5\xba\x04\xbc\xf4\x28\x03\x82\x9c\x7a\xa8\xa8\xf5\x06\xee\xa2\xd4\xa4\x08\x3b\x90\xce\xe5\xe8\xa2\xfa\x89\xc5\x3d\xeb\x43\xea\x91\x8e\xc1\xd0\x60\x2b\x23\x23\xf0\x60\x10\xbe\xc5\x06\xbd\xc5\x80\x5c\x0e\xac\x08\x75\xc7\x20\x3d\x82\x26\x43\x01\x3b\x08\x03\x84\x9e\x18\xde\x36\x9b\x0c\xe3\xf3\xd5\x75\xd2\x92\xbd\x05\x76\xd8\xbe\x13\xd5\x57\x05\x1e\x35\x4a\x1e\xa9\xb5\x83\x0d\x92\x2c\x17\x6e\xe5\x1b\x05\xf8\x43\x5a\x43\x83\x10\x39\xe5\x64\x90\x39\xfc\x98\xf6\x34\xdb\x24\x9a\xf3\x25\x35\xe1\x7c\x5c\x9c\x90\x3e\x6a\x4e\x0a\x5e\xc4\x5c\xf3\xde\xe9\x4d\xce\xbf\xba\x78\xf9\x58\x0f\x72\x4e\x28\x8a\x8b\xf8\x51\x38\x95\xcd\x53\xd6\xd9\xd7\x57\x07\x74\x9e\x6c\x50\x50\x9f\xf1\xe2\x8c\xeb\x7f\xdc\x4a\xdf\xd7\x5c\xb4\x53\xf5\xec\x02\x1e\x4c\x36\x3d\x98\x35\x7a\xa6\xc1\xa6\xa9\xe6\xe9\x8e\x57\xa5\xa8\xb4\x6c\x50\x3f\x37\xe1\x2c\xab\x4f\x9e\xe7\x10\x77\xa9\x6f\xc6\x76\x0f\xe0\xd1\x69\xd9\x22\xd4\xef\x6b\xa8\x7f\xd5\xff\xf3\xa2\x06\x63\x06\x5b\x42\xf2\x33\x21\x8b\xa0\xb8\x48\xe7\xc4\xef\xe9\xe5\x08\x1a\x96\x89\xc4\x0a\xb6\x5b\x20\xdb\xea\xd8\x1d\xff\x1b\x04\xec\x76\x55\x8f\xda\x08\xee\x97\xf9\xc0\x27\xe4\x23\x8c\xac\x3f\xee\x43\x96\x83\xb4\x6d\xe9\x35\x9f\xf4\xc1\xe3\x28\x94\x3e\x39\xf7\x08\xea\x49\xaf\x71\x68\xc5\xea\x68\xcb\x03\xdc\xc5\x21\x4c\xb6\x09\xda\x93\x2e\x46\x5a\x79\x8b\xdd\xa2\xd9\xcc\x33\x5d\xa3\x5f\x53\x3b\xdb\x9f\xd0\xfd\x0d\x00\x00\xff\xff\x05\xdd\xfe\xa8\x8d\x05\x00\x00"),
		},
		"/templates/analytics-v1.yaml": &vfsgen۰CompressedFileInfo{
			name:             "analytics-v1.yaml",
			modTime:          time.Date(2019, 8, 5, 0, 4, 8, 544293568, time.UTC),
			uncompressedSize: 743,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\x41\x6f\xdb\x30\x0c\x85\xef\xfe\x15\x44\xee\x71\xed\x61\x87\x42\xb7\x62\xbd\x14\x1b\x1a\x23\x5b\xba\xe3\xc0\x48\x5c\x26\x94\xa2\x04\x49\xf6\xea\x65\xfd\xef\x83\xea\xc6\xf1\x1a\x54\x27\xfb\x91\xfe\xfc\xf8\xa8\xe3\x11\xec\x4f\xa8\x1f\x90\x7b\x4a\x35\x0a\xf2\x98\xad\x4e\xf0\xfc\x5c\x61\xb0\x0f\x14\x93\xf5\xa2\x80\x9e\x32\x49\x79\x4c\x57\x43\xbb\xa7\x8c\x6d\xf5\x68\xc5\x28\xb8\xa5\xc0\x7e\x74\x24\xb9\x72\x94\xd1\x60\x46\x55\x01\x08\x3a\x52\x30\xe3\xd6\x43\xfb\x2a\xa6\x80\x9a\x14\x1c\x8f\x50\x6f\x89\x09\x13\xd5\xf7\x27\xb9\xfc\x14\x80\x71\x4f\x9c\x0a\x04\x00\x43\x58\x50\x5e\xa4\xe1\x64\x69\x68\xab\x62\x5e\x34\xf7\x86\x60\xe5\x28\xfd\x32\xe4\x7c\x3d\x7d\xbf\x82\x1a\xfe\x82\x15\x43\x92\xe1\x63\x21\xa7\x40\xba\x50\x23\x05\xb6\x1a\xd3\x64\xe2\x75\xf0\x93\x38\x59\x48\x39\x62\xa6\xc3\x38\x99\x88\x9e\xd9\xca\x61\x17\x0c\x66\x9a\x24\x00\x87\x4f\x5f\xfb\x78\x20\x05\xed\x59\xd9\x09\x0e\x68\x19\xf7\x4c\x0a\x9a\x17\x3d\x8f\x81\x14\x6c\x97\x88\x0a\x20\x93\x0b\x3c\xd3\x96\xc1\x95\xb3\x4c\xe0\x9d\x14\xde\x26\x51\xde\x4f\x03\x96\xa3\xbd\x64\xb4\x42\x71\xc6\xac\xdf\xee\x64\xe6\x58\x87\x65\x8e\x3d\xca\x1f\xb4\x9a\x7d\x6f\xae\x90\x39\x05\x8c\x8f\xaa\xa9\x9b\xfa\xc3\xff\x9d\x5d\xcf\xdc\x79\xb6\x7a\x54\x70\xc3\xbf\x71\x3c\x93\x82\x8f\x79\xe1\x7b\x7d\xb6\xd1\xf9\x98\x15\x5c\x37\xd7\xcd\x5c\x25\x19\x96\xad\x93\xbb\xef\x9b\xed\xe7\x2f\x9b\x9b\xdb\xb9\x00\x30\x94\x0d\x29\xe8\xee\x2e\x9a\xbb\xbb\x1f\x9f\x36\xbb\xfb\x6f\x97\xcd\xab\xb6\x69\x9a\x55\xb9\x1f\x24\xa6\xec\xf4\x5f\x00\x00\x00\xff\xff\x37\x1b\x90\x77\xe7\x02\x00\x00"),
		},
		"/templates/bookings-v1.yaml": &vfsgen۰CompressedFileInfo{
			name:             "bookings-v1.yaml",
			modTime:          time.Date(2019, 8, 5, 0, 4, 13, 391307661, time.UTC),
			uncompressedSize: 757,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x92\xc1\x6e\xdb\x30\x0c\x86\xef\x7e\x0a\xc2\x3b\x47\x8e\x87\x1d\x0a\xdd\x8a\x35\xc0\x80\x0d\x4b\x96\x74\xdd\x71\x60\x64\xae\x11\x42\x53\x82\xa4\x78\xcb\xb2\xbe\xfb\xa0\x3a\x76\xdc\xa6\x3a\xd9\xbf\xe8\x4f\x1f\x65\x9e\x4e\x60\x7f\x81\x7a\x40\x3e\x50\x54\x5b\xe7\xf6\x56\x1e\x23\x3c\x3d\x15\xe8\xed\x03\x85\x68\x9d\x68\xa0\x3f\x89\x24\x3f\xc6\xaa\xab\xb7\x94\xb0\x2e\xf6\x56\x1a\x0d\x77\xe4\xd9\x1d\x5b\x92\x54\xb4\x94\xb0\xc1\x84\xba\x00\x10\x6c\x49\xc3\x40\x9b\x75\xf5\x39\x8b\x1e\x0d\x69\x38\x9d\x40\xad\x89\x09\x23\xa9\xaf\x43\x9c\xcf\x04\x60\xdc\x12\xc7\xcc\x00\x40\xef\x2f\x90\xe7\xa4\x1b\x84\xba\xba\xc8\xe6\x62\xf8\xd0\x10\x94\x2d\xc5\x5d\x43\xad\x53\xfd\xe7\x25\x28\xf8\x07\x56\x1a\x92\x04\x1f\x32\x38\x7a\x32\x19\x1a\xc8\xb3\x35\x18\x7b\x87\x73\xd7\x43\xd8\x1b\x24\x6a\x3d\x63\xa2\xde\x61\xda\x55\x5e\x53\xbf\xb7\x1d\x5f\x7b\xe6\xf7\xe1\xf8\xbc\x8c\x93\x84\x56\x28\x8c\x94\xd9\xab\xfb\x1a\x31\xb6\xc5\xc7\x9c\xa3\xfc\x45\x6b\xd8\x1d\x9a\x0a\x99\xa3\xc7\xb0\xd7\x73\x35\x57\xef\x5f\x56\xae\x0e\xcc\x2b\xc7\xd6\x1c\x35\xdc\xf2\x6f\x3c\x5e\x48\xde\x85\x34\xb1\x9e\x5d\x2c\x56\x2e\x24\x0d\x37\xf3\x9b\xf9\xb8\x4b\xd2\x4d\x4b\x7b\xb9\x1f\xcb\xf5\xe7\x2f\xcb\xdb\xbb\x71\x03\xa0\xcb\xd7\xa7\x61\x61\x76\xee\xaa\x7c\xf1\xf1\xd3\xf2\xe7\xe6\x7e\x7d\x5d\x5e\x8e\x43\x16\x29\x74\xd6\x10\x04\x8a\xde\x49\xa4\xf2\x8a\xb2\x5e\x7c\xfb\xbe\xd8\xdc\x6f\xde\xa0\xec\x52\xf2\xba\xaa\x50\x90\x8f\xc9\x9a\xa8\x73\x0b\xd5\xbb\x1a\xce\x1b\x1e\x9f\xc7\x72\xcc\xcb\x3c\x30\x24\x4d\xfe\xc9\xff\x03\x00\x00\xff\xff\x27\xc6\x8b\xf1\xf5\x02\x00\x00"),
		},
		"/templates/catalog-v1.yaml": &vfsgen۰CompressedFileInfo{
			name:             "catalog-v1.yaml",
			modTime:          time.Date(2019, 8, 5, 0, 4, 16, 55081888, time.UTC),
			uncompressedSize: 820,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x92\xcb\x6e\xdb\x3c\x10\x85\xf7\x7a\x8a\x81\xfe\xb5\x75\xf9\xd1\x45\xc0\x5d\xd0\x18\x28\xd0\xa2\x76\xe5\x38\x5d\x16\x63\x6a\x6a\x13\x19\x5e\x40\x52\x6a\x54\x37\xef\x5e\x30\xb2\x14\xa5\x0e\x57\xd2\x99\xd1\xa7\x73\x86\x73\x3e\x83\xfa\x09\xc5\x03\x72\x47\xa1\x90\x18\x91\xed\x11\x9e\x9f\x33\x74\xea\x81\x7c\x50\xd6\x08\xa0\xa7\x48\x26\x3d\x86\xb2\xaf\x0f\x14\xb1\xce\x1e\x95\x69\x05\xdc\x91\x63\x3b\x68\x32\x31\xd3\x14\xb1\xc5\x88\x22\x03\x30\xa8\x49\xc0\x05\xb6\xea\xeb\x8b\x14\x1c\x4a\x12\x70\x3e\x43\xd1\x10\x13\x06\x2a\xbe\x4e\x72\xfa\x25\x00\xe3\x81\x38\x24\x04\x00\x3a\x37\x33\x5e\x84\x7e\xb2\xd3\xd7\x59\xb2\x6d\x24\x77\x2d\x41\xae\x29\x9c\x5a\xd2\xb6\x18\xbf\xce\xa1\x80\x3f\xa0\x4c\x4b\x26\xc2\x87\xc4\x0d\x8e\x64\x62\x7a\x72\xac\x24\x86\xd1\xc2\x25\xf2\x24\x8e\x06\x42\xf4\x18\xe9\x38\x8c\x16\xbc\x65\x56\xe6\xb8\x77\x2d\x46\x1a\x25\x00\x8d\x4f\xbb\xce\x1f\x49\x40\xfd\xaa\xec\x0d\xf6\xa8\x18\x0f\x4c\x02\xaa\x17\x3d\x0e\x8e\x04\x34\x4b\x44\x06\x10\x49\x3b\x9e\x69\xcb\xa1\xa5\xb3\xcc\xff\xee\x0c\xfe\x9d\x43\x7a\x9f\xe2\xa5\x23\xad\x89\xa8\x0c\xf9\x19\xb2\x7a\x7b\x1b\x33\x45\x69\x4c\x19\x0e\x68\x7e\xa3\x92\x6c\xbb\xb6\x44\xe6\xe0\xd0\x3f\x8a\xaa\xa8\x8a\xff\xdf\x76\x6e\x3b\xe6\xad\x65\x25\x07\x01\xb7\xfc\x0b\x87\x30\xd7\x9d\xf5\x71\xe1\x79\xf5\x6a\x62\x6b\x7d\x14\x70\x53\xdd\x54\x73\x95\x4c\xbf\x6c\x1d\xbd\x7d\xdf\x34\x9f\xbf\x6c\x6e\xef\xe6\x02\x40\x9f\x6e\x47\xc0\x5a\x9e\xec\x55\xfb\xfa\xe3\xa7\xcd\x8f\xdd\x7d\x73\xdd\x9e\x4b\x65\x48\xe3\x14\x16\x3c\x05\x67\x4d\xa0\xfc\x8a\xd1\xac\xbf\xed\xd7\xbb\xfb\xdd\x3b\x8c\x53\x8c\x4e\x94\xa5\xb6\xbd\xa2\x20\x92\xfb\xf2\xbf\x3a\x4f\x2b\x47\xa6\x4d\x6b\xf2\x37\x00\x00\xff\xff\xae\x71\x09\xa2\x34\x03\x00\x00"),
		},
		"/templates/frontpage-v1.yaml": &vfsgen۰CompressedFileInfo{
			name:             "frontpage-v1.yaml",
			modTime:          time.Date(2019, 8, 5, 0, 4, 18, 821147628, time.UTC),
			uncompressedSize: 840,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\xcf\x6e\xdb\x30\x0c\xc6\xef\x7e\x0a\x22\x3d\xc7\x7f\x8a\x1d\x0a\xdd\x8a\x35\xc0\x80\x0d\x4b\xe6\x34\xdd\x71\xa0\x65\xd6\x11\x42\x4b\x82\x24\x7b\xf5\xb2\xbe\xfb\xa0\x38\x71\xbd\x66\xd3\xc9\xfe\x48\x7e\xfa\x91\xe2\xf1\x08\xea\x19\xd2\x27\xe4\x8e\x7c\xfa\xec\x8c\x0e\x16\x1b\x82\xd7\xd7\x04\xad\x7a\x22\xe7\x95\xd1\x02\xe8\x25\x90\x8e\x9f\x3e\xeb\x8b\x8a\x02\x16\xc9\x41\xe9\x5a\xc0\x03\x59\x36\x43\x4b\x3a\x24\x2d\x05\xac\x31\xa0\x48\x00\x34\xb6\x24\x60\xb2\x5b\xf6\xc5\x59\xf4\x16\x25\x09\x38\x1e\x21\x2d\x89\x09\x3d\xa5\x5f\x2f\x72\xbc\x14\x80\xb1\x22\xf6\xd1\x04\x00\xad\x9d\xb9\x9c\xa4\xfe\x82\xd4\x17\x49\x84\xd7\x92\xbb\x9a\x60\xd1\x92\xdf\xd7\xd4\x9a\x74\xac\x5f\x40\x0a\xbf\x41\xe9\x9a\x74\x80\x0f\xd1\xd9\x5b\x92\xd1\xd5\x91\x65\x25\xd1\x8f\x10\xe7\xc6\x2f\xe2\x88\xe0\x83\xc3\x40\xcd\x30\x42\x38\xc3\xac\x74\xb3\xb3\x35\x06\x1a\x25\x80\x16\x5f\xb6\x9d\x6b\x48\x40\xf1\xa6\xec\x34\xf6\xa8\x18\x2b\x26\x01\xf9\x49\x0f\x83\x25\x01\xe5\xdc\x22\x01\x08\xd4\x5a\x9e\xdc\xe6\x83\x8b\x67\x3e\x81\xff\x4c\xe1\xfd\x24\xe2\xff\xa5\xc1\x78\xa4\xd1\x01\x95\x26\x37\xd9\x2c\xdf\xbf\xc9\xe4\xa3\x5a\x8c\x7d\x54\xa8\x7f\xa1\x92\x6c\xba\x3a\x43\x66\x6f\xd1\x1d\x44\x9e\xe6\xe9\xed\xdf\x99\x9b\x8e\x79\x63\x58\xc9\x41\xc0\x3d\xff\xc4\xc1\x4f\x71\x6b\x5c\x98\x71\x2f\xdf\x30\x36\xc6\x05\x01\x77\xf9\x5d\x3e\x45\x49\xf7\xf3\xd4\x91\xee\xfb\xba\xfc\xfc\x65\x7d\xff\x30\x05\x00\xfa\xf8\x42\x02\x56\x72\x6f\xae\xd2\x57\x1f\x3f\xad\x7f\x6c\x1f\xcb\xeb\xf4\xc5\xd4\xe7\xe2\xaa\xaa\x5c\x7d\xdb\xad\xb6\x8f\xdb\x7f\x54\xed\x43\xb0\x22\xcb\x24\x06\x64\xd3\x88\x08\x9c\xdd\xdc\xc2\x59\xae\x8c\x39\x28\xdd\xf8\x93\x7e\x53\x2c\xe2\x02\x92\xae\xe3\xd2\xfc\x09\x00\x00\xff\xff\xfb\x64\xf5\x25\x48\x03\x00\x00"),
		},
		"/templates/istio.yaml": &vfsgen۰CompressedFileInfo{
			name:             "istio.yaml",
			modTime:          time.Date(2019, 8, 5, 0, 9, 27, 460345791, time.UTC),
			uncompressedSize: 788,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x91\x4d\x6a\xc3\x40\x0c\x85\xf7\x3e\x85\x2e\x60\x97\xc4\x5d\xcd\xae\xd0\x4d\xa0\x7f\xe4\x6f\x5b\x14\x5b\x89\x45\xc6\x33\x66\x24\x3b\x14\x93\xbb\x17\xdb\x71\x12\x5a\x08\xb4\xc4\x2b\xcf\xe8\xbd\x37\xd2\xa7\xb6\x05\xde\x42\xb2\x46\x5b\x93\x24\x2c\xca\x3e\x90\xf8\x3a\x64\x24\x70\x3c\x46\x58\xf1\x9a\x82\xb0\x77\x06\x1c\xe9\xc1\x87\x3d\xbb\xdd\x20\x4c\xd8\x3f\x34\x13\xb4\x55\x81\x69\xb4\x67\x97\x1b\x78\x26\x51\x76\xa8\xec\xdd\xbc\xb6\x14\x95\xa4\x98\xa3\xa2\x89\x00\x1c\x96\x64\xa0\xf4\x0d\x93\x9c\x8e\x52\x61\x46\x06\xda\x16\x92\x39\x59\x42\xa1\xe4\x6d\xbc\xee\x5e\x97\x8a\xb2\xce\x5a\x78\xd1\x2b\xab\x06\xdc\x6e\x39\xfb\xf0\x96\xb3\xaf\xae\x0e\xa0\x56\x86\x1f\x80\xd2\xe7\x64\x60\xb6\x58\xce\xde\x3f\x5f\x57\xcb\xd5\xd3\x4b\x04\x20\xf5\x46\x48\x7b\x4d\x7c\xea\xa4\x99\xf4\x06\x8b\x1b\xba\x98\x9b\x71\xd8\xbe\x7a\x96\x4e\x6f\x4a\xa7\xd7\xd2\xf4\xa6\x34\x8d\xe2\x38\xfe\x2b\xd5\x35\x07\xad\xd1\x2e\x28\x34\x9c\xdd\x15\xea\xa9\xc3\xf8\x92\x50\xa8\x56\x03\xa5\xe0\x6b\xa5\xb1\x9e\x5f\x16\x3b\x0e\xf5\x6b\x2d\xc3\x37\x90\x3e\xe3\x05\x38\x10\xef\x0a\x35\x90\xa6\xff\xcf\x9a\xde\x31\x2b\xfd\x99\xf5\xd8\xef\xa4\x6d\x81\x5c\xde\x01\xfa\x0e\x00\x00\xff\xff\xb4\x1e\xb3\x30\x14\x03\x00\x00"),
		},
		"/templates/movies-v1.yaml": &vfsgen۰CompressedFileInfo{
			name:             "movies-v1.yaml",
			modTime:          time.Date(2019, 8, 5, 0, 4, 22, 246327838, time.UTC),
			uncompressedSize: 727,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x92\x4f\x4f\xdc\x30\x14\xc4\xef\xf9\x14\xa3\xbd\x6f\x48\xaa\x1e\x90\x6f\xa8\x20\x55\x6a\xd5\x5d\x2d\x85\x1e\xab\xb7\xc9\xeb\x62\xf1\xfc\x47\xb6\xe3\x92\x6e\xf9\xee\x95\x09\x1b\x42\xc1\xa7\x78\x3c\xfe\x79\xc6\xf1\xf1\x08\xfd\x0b\xf5\x2d\xc9\xc0\xb1\x36\x2e\x6b\x8e\xb9\xc5\xe3\x63\x45\x5e\xdf\x72\x88\xda\x59\x05\x7e\x48\x6c\xcb\x67\x3c\xcb\xed\x9e\x13\xb5\xd5\xbd\xb6\xbd\xc2\x25\x7b\x71\xa3\x61\x9b\x2a\xc3\x89\x7a\x4a\xa4\x2a\xc0\x92\x61\x85\x89\xb6\xce\xed\xb3\x12\x3d\x75\xac\x70\x3c\xa2\xde\xb1\x30\x45\xae\xbf\x9d\xe4\x72\x22\x20\xb4\x67\x89\x85\x00\x90\xf7\x27\xc4\xd3\x3c\x9f\xc2\xe4\xb6\x2a\xa9\x6d\x27\x43\xcf\x58\x19\x8e\x77\x3d\x1b\x57\x4f\x9b\x57\xa8\xf1\x17\xda\xf6\x6c\x13\x3e\x16\x6c\xf4\xdc\x15\x64\x60\x2f\xba\xa3\xa8\x50\x02\xc5\x14\x28\xf1\x61\x9c\x0e\x0b\x4e\x44\xdb\xc3\x8d\xef\x29\xf1\x24\x01\x86\x1e\xae\x87\x70\xe0\x69\xc3\xb3\x72\x63\x29\x93\x16\xda\x0b\x2b\x34\x4f\x7a\x1a\x3d\x2b\xec\x96\x88\x0a\x48\x6c\xbc\xcc\xb4\xe5\xed\x94\xb1\x6c\xfa\x5e\xdb\xff\x1b\x97\xf9\xa9\x48\x19\x9d\xb3\x89\xb4\xe5\x30\x33\xd6\xaf\x6e\x7d\x86\x68\x43\xa5\xc1\x9e\xec\x1f\xd2\x9d\xb8\xa1\x3f\x23\x91\xe8\x29\xdc\xab\xa6\x6e\xea\x0f\xaf\x9d\xdb\x41\x64\xeb\x44\x77\xa3\xc2\x85\xfc\xa6\xf1\x85\xe4\x5d\x48\x8b\xc4\xeb\x97\x0c\x5b\x17\x92\xc2\x79\x73\xde\xcc\xab\x6c\xf3\xd2\x3a\x45\xfb\xb1\xd9\x7d\xf9\xba\xb9\xb8\x9c\x17\x80\x5c\x1e\x9e\xc2\x55\x77\xe7\xde\xd8\xaf\x3e\x7d\xde\xfc\xbc\xfe\xbe\x7b\x6b\x5f\x4d\x25\x21\x3a\x26\x04\x8e\xde\xd9\xc8\xab\xf2\x2c\xd8\xf6\xe5\x9f\xff\x0b\x00\x00\xff\xff\x3f\x54\xaf\x7f\xd7\x02\x00\x00"),
		},
		"/templates/movies-v2.yaml": &vfsgen۰CompressedFileInfo{
			name:             "movies-v2.yaml",
			modTime:          time.Date(2019, 8, 5, 0, 4, 25, 370420145, time.UTC),
			uncompressedSize: 730,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x92\x4f\x4f\xdc\x30\x14\xc4\xef\xf9\x14\xa3\xbd\x13\xb2\x51\x0f\xc8\x37\x54\x90\x2a\xb5\xea\xae\x96\x42\x8f\xd5\xdb\xe4\x75\xb1\x78\xfe\x23\xdb\x71\x49\xb7\x7c\xf7\xca\x84\x0d\xa1\xd4\xa7\x78\x3c\xfe\x79\xc6\xf1\xf1\x08\xfd\x13\xf5\x1d\xc9\xc0\xb1\x36\x2e\x6b\x8e\xb9\xc5\xd3\x53\x45\x5e\xdf\x71\x88\xda\x59\x05\x7e\x4c\x6c\xcb\x67\x3c\xcf\xeb\x3d\x27\x5a\x57\x0f\xda\xf6\x0a\x57\xec\xc5\x8d\x86\x6d\xaa\x0c\x27\xea\x29\x91\xaa\x00\x4b\x86\x15\x26\xda\x59\x6e\x5f\x94\xe8\xa9\x63\x85\xe3\x11\xf5\x8e\x85\x29\x72\xfd\xf5\x24\x97\x13\x01\xa1\x3d\x4b\x2c\x04\x80\xbc\x3f\x21\x9e\xe7\xf9\x14\x26\xb7\x55\x49\x6d\x3b\x19\x7a\xc6\xca\x70\xbc\xef\xd9\xb8\x7a\xda\xbc\x42\x8d\x3f\xd0\xb6\x67\x9b\xf0\xa1\x60\xa3\xe7\xae\x20\x03\x7b\xd1\x1d\x45\x85\x75\x05\xc4\x14\x28\xf1\x61\x9c\x0e\x0b\x4e\x44\xdb\xc3\xad\xef\x29\xf1\x24\x01\x86\x1e\x6f\x86\x70\xe0\x69\xc3\x8b\x72\x6b\x29\x93\x16\xda\x0b\x2b\x34\xcf\x7a\x1a\x3d\x2b\xec\x96\x88\x0a\x48\x6c\xbc\xcc\xb4\xe5\xed\x94\xb1\x6c\xfa\xbf\xb6\xff\x36\x2e\xf3\x53\x91\x32\x3a\x67\x13\x69\xcb\x61\x66\x9c\xbd\xb9\xf5\x19\xa2\x0d\x95\x06\x7b\xb2\xbf\x49\x77\xe2\x86\xfe\x9c\x44\xa2\xa7\xf0\xa0\x9a\xba\xa9\xdb\xb7\xce\xed\x20\xb2\x75\xa2\xbb\x51\xe1\x52\x7e\xd1\xf8\x4a\xf2\x2e\xa4\x45\xe2\xb3\xd7\x0c\x5b\x17\x92\xc2\x45\x73\xd1\xcc\xab\x6c\xf3\xd2\x3a\x45\xfb\xbe\xd9\x7d\xfe\xb2\xb9\xbc\x9a\x17\x80\x5c\x1e\x9e\xc2\x75\x77\xef\xde\xd9\xaf\x3f\x7e\xda\xfc\xb8\xf9\xb6\x7b\x6f\x5f\x4d\x25\x21\x3a\x26\x04\x8e\xde\xd9\xc8\xc8\xed\xaa\xbc\x0c\xb6\x7d\xf9\xed\x7f\x03\x00\x00\xff\xff\xad\x22\xd8\x19\xda\x02\x00\x00"),
		},
		"/templates/movies-v3.yaml": &vfsgen۰CompressedFileInfo{
			name:             "movies-v3.yaml",
			modTime:          time.Date(2019, 8, 5, 0, 4, 29, 72638879, time.UTC),
			uncompressedSize: 730,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x92\x5f\x4f\xdb\x30\x14\xc5\xdf\xf3\x29\x8e\xfa\xde\x90\xae\x7b\x40\x7e\x43\x03\x69\xd2\xa6\xb5\x2a\x83\x3d\x4e\xb7\xc9\x5d\xb1\xb8\xfe\x23\xdb\xf1\xc8\x3a\xbe\xfb\x64\x42\x43\x18\xf8\x29\x3e\x3e\xfe\xf9\x1c\xc7\xc7\x23\xf4\x2f\xd4\xb7\x24\x3d\xc7\xda\xb8\xac\x39\xe6\x35\x1e\x1f\x2b\xf2\xfa\x96\x43\xd4\xce\x2a\xf0\x43\x62\x5b\x3e\xe3\x59\x5e\xed\x39\xd1\xaa\xba\xd7\xb6\x53\xb8\x64\x2f\x6e\x30\x6c\x53\x65\x38\x51\x47\x89\x54\x05\x58\x32\xac\x30\xd2\x96\x79\xfd\xac\x44\x4f\x2d\x2b\x1c\x8f\xa8\x77\x2c\x4c\x91\xeb\x6f\x27\xb9\x9c\x08\x08\xed\x59\x62\x21\x00\xe4\xfd\x09\xf1\x34\xcf\xa7\x30\x79\x5d\x95\xd4\xb6\x95\xbe\x63\x2c\x0c\xc7\xbb\x8e\x8d\xab\xc7\xcd\x0b\xd4\xf8\x0b\x6d\x3b\xb6\x09\x1f\x0b\x36\x7a\x6e\x0b\x32\xb0\x17\xdd\x52\x54\x58\x55\x40\x4c\x81\x12\x1f\x86\xf1\xb0\xe0\x44\xb4\x3d\xdc\xf8\x8e\x12\x8f\x12\x60\xe8\xe1\xba\x0f\x07\x1e\x37\x3c\x2b\x37\x96\x32\x69\xa1\xbd\xb0\x42\xf3\xa4\xa7\xc1\xb3\xc2\x6e\x8e\xa8\x80\xc4\xc6\xcb\x44\x9b\xdf\x4e\x19\xf3\xa6\xef\xb5\xfd\xbf\x71\x99\x9f\x8a\x94\xd1\x3a\x9b\x48\x5b\x0e\x13\x63\xf9\xea\xd6\x27\x88\x36\x54\x1a\xec\xc9\xfe\x21\xdd\x8a\xeb\xbb\x33\x12\x89\x9e\xc2\xbd\x6a\xea\xa6\xfe\xf0\xda\xb9\xed\x45\xb6\x4e\x74\x3b\x28\x5c\xc8\x6f\x1a\x5e\x48\xde\x85\x34\x4b\xbc\x7c\xc9\xb0\x75\x21\x29\x9c\x37\xe7\xcd\xb4\xca\x36\xcf\xad\x63\xb4\x1f\x9b\xdd\x97\xaf\x9b\x8b\xcb\x69\x01\xc8\xe5\xe1\x29\x5c\xb5\x77\xee\x8d\xfd\xea\xd3\xe7\xcd\xcf\xeb\xef\xbb\xb7\xf6\xc5\x58\x12\xa2\x63\x42\xe0\xe8\x9d\x8d\x8c\xbc\x5e\x94\x97\xc1\xb6\x2b\xbf\xfd\x5f\x00\x00\x00\xff\xff\x4a\xee\x61\xa5\xda\x02\x00\x00"),
		},
		"/templates/namespace.yaml": &vfsgen۰CompressedFileInfo{
			name:             "namespace.yaml",
			modTime:          time.Date(2019, 8, 5, 12, 6, 5, 527845522, time.UTC),
			uncompressedSize: 534,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xc1\x6a\xeb\x30\x10\x45\xf7\xfe\x8a\x41\xdb\x87\x15\xde\xd6\xbb\xd2\x7d\x17\x29\x64\x5b\xc6\xd2\x4d\x2d\x22\xc9\x42\x23\x1b\x8a\xeb\x7f\x2f\x72\xd3\x40\xa0\x2e\xd9\x0d\xe8\x9e\xab\xe1\x48\xcb\xd2\x92\x3b\x93\x3e\xb1\x9f\x20\x7a\x12\xbc\x70\x80\x24\x36\x38\x42\xc6\x29\x1b\xd0\xba\x36\x9c\xdc\x09\x59\xdc\x18\x3b\x9a\xff\x37\x17\x17\x6d\x47\xb7\x64\x13\x50\xd8\x72\xe1\xae\x21\xf2\xdc\xc3\x4b\x9d\x88\x38\xa5\x8e\x96\x85\x5c\x34\x7e\xb2\x20\x15\x20\x83\x45\x18\x75\xe4\x00\x45\xba\x76\x5f\x83\xfa\x32\xf5\xc8\x11\x05\xa2\xdd\x78\xa8\x81\xc7\xd8\x01\x3e\x68\x19\x0e\x66\xe0\x5c\x76\x90\xed\xec\xcf\xfb\x02\x47\x7e\x87\x6d\xfb\x8f\xad\x42\x1f\xe1\xc1\x02\xfd\x8a\x3c\xbb\x6f\x09\xbf\x83\x2e\x4a\xe1\x68\x70\x8f\x55\x37\xfb\xcc\xfc\xe3\x52\x55\xe6\xb9\x2e\xa7\x9f\x52\xba\x2a\xa6\x4f\xca\x48\x9e\x0d\x48\xfd\x53\xa4\xde\x14\xad\xab\xda\xa9\x4a\x9c\x4b\x3b\x9e\x1f\x51\x75\x53\x7a\xb7\xe5\xf6\x82\x35\x50\xbf\x02\xa2\xad\xe3\x57\x00\x00\x00\xff\xff\x2f\xb3\x70\xf3\x16\x02\x00\x00"),
		},
		"/templates/notifications-v1.yaml": &vfsgen۰CompressedFileInfo{
			name:             "notifications-v1.yaml",
			modTime:          time.Date(2019, 8, 5, 0, 4, 32, 773402058, time.UTC),
			uncompressedSize: 778,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x41\x4f\xdc\x40\x0c\x85\xef\xf9\x15\xd6\xde\x37\x24\x55\x0f\x68\x6e\xa8\x20\x55\x6a\xd5\x5d\x2d\x85\x1e\x2b\xef\xc4\x2c\x23\x1c\xcf\x68\xc6\x49\x49\xb7\xfc\xf7\x6a\x08\xc9\x06\xa8\xea\x53\xf2\x6c\x7d\x79\x7e\xce\xf1\x08\xee\x0e\xca\x5b\xe4\x8e\x52\x29\x5e\xdd\x9d\xb3\xa8\xce\x4b\x82\xa7\xa7\x02\x83\xbb\xa5\x98\x9c\x17\x03\xf4\xa8\x24\xf9\x31\x9d\xf5\xf5\x9e\x14\xeb\xe2\xc1\x49\x63\xe0\x92\x02\xfb\xa1\x25\xd1\xa2\x25\xc5\x06\x15\x4d\x01\x20\xd8\x92\x81\x57\xc8\x75\x5f\xbf\x34\x52\x40\x4b\x06\x8e\x47\x28\x77\xc4\x84\x89\xca\x6f\x93\x9c\x3f\x0c\xc0\xb8\x27\x4e\x19\x04\x80\x21\xbc\x21\x3d\xcb\xfd\x64\xad\xaf\x8b\xbc\x88\x58\xee\x1a\x82\x55\x4b\xe9\xbe\xa1\xd6\x97\x23\x63\x05\x25\xfc\x01\x27\x0d\x89\xc2\xc7\x4c\x4f\x81\x6c\x26\x47\x0a\xec\x2c\xa6\xd1\xc8\x4b\x08\x93\x38\xda\x48\x1a\x51\xe9\x30\x8c\x46\xa2\x67\x76\x72\xb8\x09\x0d\x2a\x8d\x12\x40\x8b\x8f\xd7\x5d\x3c\x90\x81\xfa\xa4\xdc\x08\xf6\xe8\x18\xf7\x4c\x06\xaa\x67\x5d\x87\x40\x06\x76\x4b\x44\x01\xa0\xd4\x06\x9e\x69\xcb\x00\x73\x2d\x53\xf8\x4f\x12\x6f\xd3\xc8\xef\xd3\x92\xb9\xac\x17\x45\x27\x14\x67\xd4\xfa\x5f\xf7\x99\x59\xae\xc5\xbc\xcf\x1e\xe5\x37\x3a\xcb\xbe\x6b\xce\x90\x39\x05\x8c\x0f\xa6\x2a\xab\xf2\xc3\xeb\xc9\x6d\xc7\xbc\xf5\xec\xec\x60\xe0\x82\x7f\xe1\x70\x22\x05\x1f\x75\xe1\x7f\x7d\xb2\xb2\xf5\x51\x0d\x9c\x57\xe7\xd5\xdc\x25\xe9\x97\xa3\xa3\xc3\x1f\x9b\xdd\x97\xaf\x9b\x8b\xcb\xb9\x01\xd0\xe7\x4b\x19\xb8\xb2\xf7\xfe\xdd\xf8\xd5\xa7\xcf\x9b\x9f\xd7\xdf\x77\xef\xc7\x57\xcb\x5d\x21\x91\xe8\x2a\xff\x36\x24\x4d\x3e\xf5\xdf\x00\x00\x00\xff\xff\x91\x99\x76\xe9\x0a\x03\x00\x00"),
		},
		"/templates/payments-v1.yaml": &vfsgen۰CompressedFileInfo{
			name:             "payments-v1.yaml",
			modTime:          time.Date(2019, 8, 5, 0, 4, 36, 200246103, time.UTC),
			uncompressedSize: 824,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x92\xcf\x6e\xdb\x30\x0c\xc6\xef\x7e\x0a\xc2\x3b\xd7\xb1\x87\x1d\x0a\xdd\x8a\x35\xc0\x80\x0d\x4b\xe6\x34\xdd\x71\x60\x24\x36\x11\x4a\x4b\x82\x24\x7b\xf5\xb2\xbe\xfb\xa0\x38\x76\xbc\xa6\x3a\xd9\x9f\xc8\x9f\x3e\xfe\x39\x1e\x41\x3f\x41\xf1\x88\xdc\x52\x28\x1c\xf6\x0d\x99\x18\xe0\xf5\x35\x43\xa7\x1f\xc9\x07\x6d\x8d\x00\x7a\x89\x64\xd2\x67\x58\x74\xd5\x8e\x22\x56\xd9\xb3\x36\x4a\xc0\x3d\x39\xb6\xa7\x9c\xac\xa1\x88\x0a\x23\x8a\x0c\xc0\x60\x43\x02\x46\xda\x4d\x57\x9d\xb5\xe0\x50\x92\x80\xe3\x11\x8a\x9a\x98\x30\x50\xf1\x7d\x94\xd3\x9b\x00\x8c\x3b\xe2\x90\x18\x00\xe8\xdc\x05\x72\x52\xba\xd1\x50\x57\x65\xc9\xb9\x91\xdc\x2a\x82\xbc\xa1\x70\x50\xd4\xd8\x62\x48\xcf\xa1\x80\xbf\xa0\x8d\x22\x13\xe1\x53\x02\x07\x47\x32\x41\x3d\x39\xd6\x12\xc3\xe0\xe1\x5c\xf5\x28\x0e\x0e\x42\xf4\x18\x69\xdf\x0f\x1e\xbc\x65\xd6\x66\xbf\x75\x0a\x23\x0d\x12\x40\x83\x2f\x9b\xd6\xef\x49\x40\x75\x51\xb6\x06\x3b\xd4\x8c\x3b\x26\x01\xe5\x49\x8f\xbd\x23\x01\xf5\x1c\x91\x01\x44\x6a\x1c\x4f\xb4\x79\xdb\xd2\x99\x37\xe0\xfd\x26\xbc\x6d\x44\xfa\x1f\xeb\x4b\x47\x5a\x13\x51\x1b\xf2\x13\xe5\xe6\xcd\x40\x26\x8c\x6e\x30\x55\xb1\x43\xf3\x07\xb5\x64\xdb\xaa\x05\x32\x07\x87\xfe\x59\x94\x45\x59\x7c\xfc\x3f\x72\xdd\x32\xaf\x2d\x6b\xd9\x0b\xb8\xe3\xdf\xd8\x5f\x48\xce\xfa\x38\x73\x7d\x73\x71\xb1\xb6\x3e\x0a\xb8\x2d\x6f\xcb\xe9\x96\x4c\x37\x0f\x1d\xcc\xfd\x5c\xd5\x5f\xbf\xad\xee\xee\xa7\x0b\x80\x2e\xcd\x47\xc0\x52\x1e\xec\x55\xf8\xf2\xf3\x97\xd5\xaf\xcd\x43\x7d\x1d\x9e\x9f\xcb\x04\x4f\x92\x74\x47\x2a\xbf\x4a\xae\x97\x3f\xb6\xcb\xcd\xc3\xe6\x9d\xe4\x43\x8c\x4e\x2c\x16\xc6\x46\xfd\xa4\x25\xc6\xb4\xf4\x22\xb9\xff\x50\xe5\x69\xe7\xc8\xa8\xb4\x27\xff\x02\x00\x00\xff\xff\x56\x7d\x2f\xd9\x38\x03\x00\x00"),
		},
		"/templates/services.yaml": &vfsgen۰CompressedFileInfo{
			name:             "services.yaml",
			modTime:          time.Date(2019, 8, 5, 0, 7, 7, 127744839, time.UTC),
			uncompressedSize: 1928,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\xd3\xc1\x6a\xc2\x40\x10\x06\xe0\x7b\x9e\x62\xf0\x9e\x60\xa1\x07\xc9\x43\xf4\xd0\x82\xf7\x71\x33\xea\xe0\x66\x76\xc9\x8e\x82\xa4\xbe\x7b\x59\x8d\x71\x53\x7a\xe9\x06\x72\x93\xdf\xe4\xff\x87\x0f\xd2\xf7\xc0\x7b\xa8\xb6\x68\xcf\x14\xaa\x40\xdd\x85\x0d\x05\xb8\xdd\x0a\xf4\xbc\xa5\x2e\xb0\x93\x1a\x2e\x6f\xc5\x89\xa5\xa9\xe1\xeb\xf1\x40\xd1\x92\x62\x83\x8a\x75\x01\x20\xd8\x52\x0d\x28\x68\xaf\xca\x26\x0c\x49\xf0\x68\xa8\x86\xbe\x87\xea\x93\x2c\x61\xa0\xea\xe3\x19\xc7\x7a\x00\x8b\x3b\xb2\x21\x36\x00\xa0\xf7\xd3\x0a\x80\xe1\x96\x34\x8e\xc7\x8a\xb1\xe7\x86\x60\xd5\x52\x38\x36\xd4\xba\xea\x51\xb3\x82\x0a\xbe\x81\xa5\x21\x51\x78\x8f\x03\xc1\x93\x89\xe5\xde\x75\x7a\x5f\x29\xef\x3f\x6b\xd8\xac\x37\xeb\xfb\xc2\xe3\xf0\xa3\xaa\x2f\xe2\x9c\x25\xa3\xae\xfb\xf3\x9e\xb2\x2c\xff\xeb\xb1\x73\xee\xc4\x72\x98\xc1\x91\x34\x24\x1a\x63\xba\x30\xc6\xb8\x9b\x61\x61\x50\xd1\xba\x43\x3e\xc5\xab\x20\x91\x78\x86\x0b\x43\x3c\x67\x33\x1c\xf6\x9d\x13\xf5\x78\xa0\x7c\x89\xb4\x22\xb1\x78\xc5\x0b\x6b\xbc\x86\x33\x3c\x5a\x77\x61\x9a\xf1\x85\x8c\xef\x27\x12\x43\xb6\x30\xc3\xb0\x9a\x61\x20\x4e\x79\xcf\x06\x95\x9d\xcc\xa0\xf8\x5d\x93\x88\x4c\xff\x5a\x18\x66\x3a\x9e\xe1\xe3\xf1\xda\x92\xe8\x0c\x9a\xa4\x21\x51\x19\xd3\x85\x41\xc6\xdd\x68\xd1\xf7\x40\xd2\xc4\xe2\x9f\x00\x00\x00\xff\xff\x2d\x3e\xb4\x99\x88\x07\x00\x00"),
		},
		"/values.yaml": &vfsgen۰CompressedFileInfo{
			name:             "values.yaml",
			modTime:          time.Date(2019, 7, 16, 19, 14, 49, 0, time.UTC),
			uncompressedSize: 311,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xcc\x31\x6b\xc3\x30\x10\xc5\xf1\x5d\x9f\xe2\x20\x73\x03\x4d\xb7\x6c\x85\x8c\xed\xd6\xa5\xe3\x45\x7e\x72\x8e\x4a\x3a\x73\x77\x16\xf8\xdb\x97\x82\x0d\xcd\xf8\xfb\xf3\x78\x27\xba\xa1\xf0\x5a\x83\x06\xd7\x15\x4e\x45\x8d\x1a\xfc\x31\xa1\xe9\x39\x9d\xe8\xeb\x21\x4e\xe2\xc4\xf4\xfd\xfe\xf9\xf1\x52\xd4\x1a\x47\x60\xa2\x22\x15\x7f\x83\x1b\x72\x65\x03\x0d\x36\xe1\x7b\x85\x53\x28\xdd\x41\x0b\xbb\x63\x22\xe9\xa1\xb4\xe9\x6a\x14\x68\x4b\xe5\x80\x9f\x53\x32\x2c\x55\x32\xfb\x95\x2e\x29\x39\x6c\x48\x86\x5f\x29\x6c\x45\x4a\xe2\x21\x6a\x70\x5d\xed\x5f\xe5\xce\x75\x0b\xc9\x47\xb8\xab\xfe\x48\x9f\x0f\x66\x0e\xae\x3a\xef\x2a\xa6\x3d\x16\x9e\xb1\xbb\xe9\x10\xf8\x78\x7d\xe6\xe5\x99\x6f\x3b\xbb\x86\x14\xc9\x1c\xa2\xfd\xb8\x5f\x78\x6b\xe8\x71\xf0\x37\x00\x00\xff\xff\x4c\x5e\xe8\xaa\x37\x01\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/.helmignore"].(os.FileInfo),
		fs["/Chart.yaml"].(os.FileInfo),
		fs["/templates"].(os.FileInfo),
		fs["/values.yaml"].(os.FileInfo),
	}
	fs["/templates"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/templates/_helpers.tpl"].(os.FileInfo),
		fs["/templates/analytics-v1.yaml"].(os.FileInfo),
		fs["/templates/bookings-v1.yaml"].(os.FileInfo),
		fs["/templates/catalog-v1.yaml"].(os.FileInfo),
		fs["/templates/frontpage-v1.yaml"].(os.FileInfo),
		fs["/templates/istio.yaml"].(os.FileInfo),
		fs["/templates/movies-v1.yaml"].(os.FileInfo),
		fs["/templates/movies-v2.yaml"].(os.FileInfo),
		fs["/templates/movies-v3.yaml"].(os.FileInfo),
		fs["/templates/namespace.yaml"].(os.FileInfo),
		fs["/templates/notifications-v1.yaml"].(os.FileInfo),
		fs["/templates/payments-v1.yaml"].(os.FileInfo),
		fs["/templates/services.yaml"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰FileInfo:
		return &vfsgen۰File{
			vfsgen۰FileInfo: f,
			Reader:          bytes.NewReader(f.content),
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰FileInfo is a static definition of an uncompressed file (because it's not worth gzip compressing).
type vfsgen۰FileInfo struct {
	name    string
	modTime time.Time
	content []byte
}

func (f *vfsgen۰FileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰FileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰FileInfo) NotWorthGzipCompressing() {}

func (f *vfsgen۰FileInfo) Name() string       { return f.name }
func (f *vfsgen۰FileInfo) Size() int64        { return int64(len(f.content)) }
func (f *vfsgen۰FileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰FileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰FileInfo) IsDir() bool        { return false }
func (f *vfsgen۰FileInfo) Sys() interface{}   { return nil }

// vfsgen۰File is an opened file instance.
type vfsgen۰File struct {
	*vfsgen۰FileInfo
	*bytes.Reader
}

func (f *vfsgen۰File) Close() error {
	return nil
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
