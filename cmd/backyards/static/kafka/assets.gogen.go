// Code generated by vfsgen; DO NOT EDIT.

package kafka

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// Assets statically implements the virtual filesystem provided to vfsgen.
var Assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2019, 1, 1, 0, 1, 0, 0, time.UTC),
		},
		"/cert.yaml": &vfsgen۰CompressedFileInfo{
			name:             "cert.yaml",
			modTime:          time.Date(2019, 1, 1, 0, 1, 0, 0, time.UTC),
			uncompressedSize: 689,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x92\xb1\x4e\xc4\x30\x0c\x86\xf7\x3c\x85\x5f\x20\x41\xb7\xa1\xac\x4c\x2c\x0c\x20\xb1\xfb\x52\xb7\x44\x4d\x9c\xc8\x4e\xbb\x20\xde\x1d\xa5\xe5\x40\x48\x45\xc0\x76\x9b\x65\xff\x76\xff\xaf\x7f\xb0\xc6\x67\x12\x8d\x85\x3d\x04\x92\x96\x91\x71\x22\x71\xf3\xad\xba\x58\x6e\xd6\x13\xa6\xfa\x82\x27\x33\x47\x1e\x3c\xdc\xab\x2e\x24\x26\x53\xc3\x01\x1b\x7a\x03\x90\xf0\x4c\x49\x7b\x05\x80\xb5\xba\x79\x39\x93\x30\x35\xda\xf6\x19\x33\x79\x98\x71\x9c\xd1\x96\x4a\x82\xad\xc8\x0f\xd2\x50\x72\x2d\x4c\xdc\x3c\x5c\x94\xb6\x3b\x8a\x63\x0c\xd8\x48\x0d\xc0\xd1\x35\xab\x94\x46\x8d\x13\xd3\x60\xe3\x6e\x4f\x2b\x85\x6e\xa8\x4f\x9e\xb6\x89\x87\xd7\x37\x63\xad\x35\xff\xc3\xbd\xfb\xfa\xfc\xb5\x31\xcb\x4a\xbb\xf4\x93\x36\x94\x9c\x0b\x3f\x1c\xc9\x2f\x85\xdb\xfa\x4e\xd7\x60\x00\x06\xd6\x2e\xfe\xc0\xb0\xbf\xef\xb8\x90\x16\x6d\x24\x2e\x95\x80\xc9\x00\xec\xbf\xfb\x91\xc6\xfd\xc4\xb7\x27\xd2\x1b\x7f\x8c\xab\x07\x15\x84\xda\xa1\xf5\x4e\x1a\x79\xda\x51\x7b\x82\xef\x01\x00\x00\xff\xff\x7c\xb2\x5b\x8e\xb1\x02\x00\x00"),
		},
		"/kafka-envoyfilter.yaml": &vfsgen۰CompressedFileInfo{
			name:             "kafka-envoyfilter.yaml",
			modTime:          time.Date(2019, 1, 1, 0, 1, 0, 0, time.UTC),
			uncompressedSize: 499,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x91\x41\x6f\xfa\x30\x0c\xc5\xef\xfd\x14\x16\xf7\xf6\x0f\xfa\x6b\x3b\xe4\xc6\xa0\x48\xd5\xa6\x32\x95\x6e\x3b\x56\xa6\xb8\x10\x35\x4d\xa2\xc4\xb0\xf2\xed\xa7\x36\x14\xb8\x25\xfe\x3d\xbf\xd8\x2f\x68\xe5\x37\x39\x2f\x8d\x16\xa0\x89\x7f\x8d\x6b\xa5\x3e\x26\xd2\xb3\x34\x89\x34\xff\x2e\x0b\x54\xf6\x84\xff\xa3\x56\xea\x83\x80\x54\x5f\xcc\x75\x23\x15\x93\x8b\x3a\x62\x3c\x20\xa3\x88\x00\x34\x76\x24\xa0\xc5\xa6\xc5\xb8\x09\xd8\x5b\xaa\x07\x34\x58\x2a\x83\x87\x1d\x29\xaa\xd9\xb8\xa1\x06\xa0\x70\x4f\xca\x87\x33\x00\x5a\x7b\xeb\x8e\x00\x6a\xa3\x1b\x79\xfc\x44\xae\x4f\x34\x2a\xe2\x81\xab\x6b\x69\x04\xe4\x69\xf9\xb3\x2d\xde\xab\x4d\xf6\x51\xa6\xc5\xd8\xdd\x0d\xc2\xc9\xa8\x36\x9a\xa9\x67\x01\xbb\x6c\x9d\xae\x96\x45\x95\xe5\x6f\xdb\xaf\x7c\x7d\xc3\x4a\x7a\x26\x4d\x6e\x92\x03\x58\xe3\x38\x3f\x77\x7b\x72\x02\x16\x2f\xf3\xf9\xeb\x9d\x84\x35\x56\x27\x94\xfa\x21\x9f\xca\xcf\x95\x69\xfb\x59\x27\x7b\x72\xb3\x91\xd8\xe7\xa1\x8c\x25\x87\x3c\x46\x9c\xe5\xbb\xb4\x28\xab\xe5\x66\x9a\x1e\xe0\x82\xea\x4c\x0f\xbf\xe0\x45\x43\xce\x49\x78\xcb\x27\xb7\x8f\x49\xc6\x84\xaa\xbd\x33\x2d\xb9\x7b\x43\x88\xeb\x79\x20\xcf\xc8\x95\x75\xd4\xc8\x5e\x00\xf5\xd8\x59\x45\xe1\x1a\xc5\x71\x1c\xfd\x05\x00\x00\xff\xff\xa9\x2e\x95\xa9\xf3\x01\x00\x00"),
		},
		"/kafka-kafkacluster.yaml": &vfsgen۰CompressedFileInfo{
			name:             "kafka-kafkacluster.yaml",
			modTime:          time.Date(2019, 1, 1, 0, 1, 0, 0, time.UTC),
			uncompressedSize: 15341,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x3b\x5d\x4f\x63\xb9\x92\xef\xfd\x2b\x4a\x99\x97\x99\x2b\x62\x08\x3d\x33\xb7\x89\x94\x07\xa0\xe9\x6e\x76\x80\x44\x24\xdc\x5e\x69\xb5\x42\x8e\x4f\x25\xf1\xc4\xc7\x3e\x6b\xfb\x10\xd2\xbb\xf7\xbf\xaf\xfc\x71\xbe\x92\x43\x08\xd0\xb3\xab\x2b\x75\xcf\xc3\x10\xbb\xbe\x5c\xe5\x2a\x97\xcb\x75\x68\xc6\xff\x81\xda\x70\x25\xfb\xb0\xa4\xb3\x25\x25\x53\x2a\xbf\x51\xce\x84\xca\x13\xc2\xd5\xe1\x43\x6f\x8a\x96\xf6\xde\x2d\xb9\x4c\xfa\xf0\x87\x03\x39\x17\xb9\xb1\xa8\xdf\xa5\x68\x69\x42\x2d\xed\xbf\x03\x10\x74\x8a\xc2\xb8\xbf\x00\x98\x92\x56\x2b\x21\x50\x77\xad\x52\xc2\x90\xe5\x07\x43\xb8\xea\x43\xa7\x47\x8e\x3a\xef\x00\x24\x4d\x31\xb2\x7b\x67\x32\x64\x0e\x6d\x81\x34\x11\x68\xcc\x18\xf5\x03\x67\x78\x21\xe9\x54\x60\xd2\x87\x19\x15\x06\xdf\x01\x7c\x5b\x9e\x26\x89\x46\x63\x30\x72\xe9\x42\x07\x1f\x69\x9a\x09\xec\x7e\x53\x6a\x89\x98\xa1\x66\x41\xb2\x2e\x13\x1c\xa5\x25\xe5\x78\xff\xb8\xf7\xa1\xe7\x38\x2b\x89\x67\x5a\x2d\x51\x8f\x50\xdf\xa8\x04\x2b\xfa\x11\xf5\x32\xa5\x73\xec\x43\x67\x95\x6b\x63\x53\xe4\x6e\xec\xd0\x4b\xda\x3f\x26\xbd\xe3\xee\x31\x79\x1f\xd6\xa0\x91\x26\x43\x29\xd6\xe7\x4a\xce\xf8\xbc\x0f\xff\xe3\x85\xa2\xb9\x55\x84\x69\xa4\x16\x89\x55\x19\x67\x86\xa0\x5f\xc9\xa0\xe0\x33\xf5\xec\x03\xd6\x67\xad\xf2\x2c\x2e\x27\xc1\x19\xcd\x85\x0d\x3f\x0a\xb0\x53\x29\x95\xa5\x96\x2b\x69\x8a\x09\x00\xc3\x13\x64\x54\x13\x6e\x2c\x57\xce\x44\xc6\x52\x6b\x2e\xa5\x5b\x01\x57\x72\xa4\x71\xc6\x1f\xd1\xf4\x8b\x25\xdd\xa7\x54\xd2\x39\xea\x03\xe1\x56\x23\x6b\x03\x0b\x6b\xb3\xfb\x94\x3f\xa2\xbe\x9f\x71\x61\x51\x1f\x58\xb6\x31\x60\x50\x3f\xa0\x3e\x08\xb6\x8a\xfc\xad\xd2\x74\x8e\x61\x09\x35\xb9\xba\x90\xaa\x5c\xda\x11\xb5\x8b\x3e\x74\x82\xd2\xba\x42\xcd\x4d\xa7\x04\x01\xc8\x1e\xd8\x38\x5a\xbc\xfa\x47\x19\x43\x63\xae\x55\x82\xa6\x39\xe1\x88\xde\x22\x4d\xbe\x6a\x6e\x71\x28\x19\x36\x66\x35\x1a\x95\x6b\xb6\x8d\xa4\xf1\xbf\x72\x34\x76\x6b\xbc\x94\xbd\x0f\xbd\xa3\xcf\xbc\xb4\x46\xb9\xa3\x78\xd2\x87\xa3\x86\x05\x6a\x86\xea\x43\x27\x1a\xa9\x53\x03\xef\xbd\x0c\xfc\x78\x3f\x70\xe7\x3e\x5c\xce\xef\xb2\xb9\xa6\x49\x54\x75\x10\x72\x46\xb9\xc8\x35\x4e\x16\x1a\xcd\x42\x89\x28\x41\x61\x5a\x53\x07\xe5\xd2\xa2\x96\x54\x5c\x15\x93\x85\x3e\xba\x60\xd7\x99\xdb\xe5\x99\xa0\x0e\xe8\xd1\x56\x26\x0a\xbe\xd9\x29\x70\xab\x09\xe7\xd5\x94\x4b\xd4\x23\xa5\x6d\x1f\x8e\x4f\x8e\x4e\x8e\xcb\xc9\xdc\x60\xf2\x49\xe9\x4b\x29\x51\x9f\xc5\xa5\xa5\x69\x2e\x39\xf3\xbb\xb7\x0f\x56\xe7\xb8\x3f\xf7\x2a\x82\xec\xe4\xff\x7e\x7f\xfe\x85\xfb\x35\xc0\xcf\x4b\x36\xed\xd2\x32\x9d\x73\x83\x11\xaa\xae\x59\xef\xda\xf5\x01\x80\x8c\x6a\xcb\x83\xa7\x42\xaf\x50\x8c\xc6\x4c\x44\xa2\x9f\x28\xb3\x4a\xf7\xe1\x7d\x11\x22\x6b\x51\x03\xe0\x27\x38\x57\xd9\x5a\xf3\xf9\xc2\xc2\xf1\x51\xef\xef\x70\xc5\xe5\x12\x93\x4b\x09\xe7\x4a\x67\x04\xae\x38\x43\x69\x30\x81\x5c\x26\xa8\xc1\x2e\x10\xce\xc6\x1f\xe1\xb8\x7b\x2e\x68\x6e\xb0\x98\x87\x9f\xdd\x4c\x27\xfe\xea\xfc\x42\x60\x8c\xd5\x24\x97\x1e\x31\xd3\xea\x4f\x64\x16\xb4\x52\x16\x66\x4a\x83\x28\xe7\x67\x4a\xa7\x5e\x5a\x52\xc8\x55\xca\x37\x59\x70\x03\xdc\x00\x95\x10\xc3\xae\x23\x94\xa1\xb6\x6b\x98\x71\x81\x9e\x92\x3f\x1e\xe0\xdc\xab\x0d\xa2\xde\x82\x0c\xe1\xe0\xd8\xd6\xa7\x47\x4b\x95\x46\x48\xd0\x52\x2e\x0c\xa9\x69\xc4\x01\xe4\xda\x0b\xe4\xe1\x9c\xf4\xc5\xa1\x03\x31\xc6\x97\xe0\x83\xfd\xfe\xd5\x16\x84\x90\xd2\x47\x9e\xe6\x69\xf0\x94\x07\x2a\x9c\x8a\x52\x2e\x04\x37\xc8\x94\x4c\x0c\x4c\xd1\xae\x10\x25\xd8\x95\xaa\x38\x6b\x9c\x39\xe7\xc3\x4a\xd6\x62\x8a\xa4\xf4\x91\xd0\x39\x92\xd4\x0c\xde\x1f\xb9\x7f\xd5\x6a\xbc\xb8\xc0\x93\x72\x25\x9b\x6a\xba\xb4\x4e\xbf\x6e\x6b\x3e\xbb\xd8\xf8\x93\x27\x83\x10\x65\xc3\x46\xed\x46\xb7\x69\x2c\xd1\xf0\x6f\x08\x6a\x06\x93\xf3\x11\x18\x94\x09\x4c\xf3\xd9\x0c\x35\x4c\xd7\x16\xcd\xb3\x8c\x1c\x06\x09\x18\xc4\x63\x0c\x7a\xef\x7b\x47\x7f\x3f\x7e\x92\x85\x46\x86\xfc\x01\x0b\x2e\x7e\xea\x39\x26\x11\xe7\x59\x3e\x96\xa7\x08\x56\xc1\x8a\x72\x0b\x53\x9c\xf9\x5d\xc3\x0d\x53\x52\xba\xfd\x4c\x25\xf0\x44\xa0\x17\x23\x8e\xd5\x77\x72\x35\x64\xbc\x99\x1c\xac\xb3\xd3\x6f\xbf\x36\xec\xf4\x14\x23\x8d\x05\x1f\xab\x80\xc2\x9c\x3f\xa0\x84\x85\x32\x8d\x65\x04\x08\x32\xa5\x6c\xa9\x66\x33\x4f\x7d\x07\x65\xa7\x17\xb7\x9b\x4c\xa6\x9c\xfb\xcd\xb4\x4a\x81\x7a\x9a\x40\x67\xd6\x69\x0f\x65\xc2\xe5\xdc\x03\xf9\x13\xad\xc6\x2b\xfc\x76\xf4\x54\x6e\xcb\xfd\xd6\xee\x3c\x95\x9d\x85\xa2\x09\xa4\x4a\x72\xab\xf4\x9b\x3c\x47\xe6\xe9\x14\xb5\xb3\x7a\x8a\x56\x73\x06\x33\xb4\x6c\xe1\x43\x93\xcb\x8c\xdc\x1a\xfd\x48\x9c\xae\x24\x08\x21\x22\xa6\x26\x91\xa4\xcc\x53\x12\xe0\x48\x24\x63\x06\xbd\xa6\xa3\x06\x26\xc6\x07\x1e\x0d\x4c\x50\x63\x22\x40\x44\x8c\x53\xc4\x4f\x0d\x98\x4a\x89\xf0\x21\x94\x4b\x12\xf2\xda\xe0\x23\xd1\x45\x48\xd4\x41\x40\xe3\x72\x4e\x1a\xb1\xe9\x3a\x08\x7d\x8b\x99\xd2\x16\xf5\x38\xd0\xde\xa5\xdc\xfd\xd1\xa3\xbc\x3a\x4e\x86\x34\x91\x64\xd4\xba\x03\x77\x70\x7f\xdf\x46\xa9\xe9\x6e\x21\xfa\xba\x54\x06\x83\x26\xfc\xb1\x59\x64\x67\x7e\x96\xf8\xd9\x57\x2b\xc3\x1b\x29\x88\x3d\x76\x84\x1a\xfc\x59\x15\xb8\x2b\x83\x36\x84\xb2\x0a\x0c\x7d\xc0\x70\xda\x14\xe7\x62\xd3\x86\x66\xf3\xd8\x24\x0d\x3b\x46\xf9\xbd\x6e\x06\xf7\xf7\xdb\xa7\xc7\xa8\xc0\x0b\x1a\x1a\x37\x88\xbe\x46\xce\x54\x25\x28\xc0\x6a\xca\xa5\x73\xb9\xa6\x94\x21\x5b\x7b\xa1\x88\x2e\x9f\x15\x93\x48\xb0\x4d\xc0\x5a\x76\x00\x33\x9f\x1e\x38\x7f\x0a\x72\x36\x94\x55\x8a\x9b\x71\xd6\x66\xe6\xb0\x85\x6a\xe4\x48\x20\x37\x38\xde\xa5\x90\xca\x85\x5b\x54\xc3\x94\x34\x79\x5a\xfa\xb3\xa9\x79\x6a\x64\xed\x42\x89\xdb\x2b\x11\x60\xf0\xa1\xc1\xab\x32\x3b\x35\x86\xcf\xa5\x8a\x4e\x5b\x3f\x0c\x6a\x1e\xfd\x84\x33\x57\xbb\xa3\xa0\xf2\xea\x2d\xfd\x31\x24\xd7\xf5\xed\xa2\xcb\x4d\x74\x1a\xa9\x3f\x19\x73\xdc\x96\x78\x2a\x49\x68\x11\xdd\x31\x2c\xc0\x5d\x6c\xee\x1d\x6f\x9d\x31\x9b\x7e\x61\x60\xc5\x65\xa2\x56\xe1\xc8\x6c\x67\xb1\xe9\x2c\x86\x04\x9c\x96\x74\xa3\x19\xa3\xb7\x9c\x30\xe0\x19\xe7\x01\xee\x86\xec\xf9\x61\xaa\xf4\xba\x66\xe7\xa7\xb8\x6d\xc5\x66\x2e\x7d\x12\xf5\x94\xa7\xfb\xc3\x8b\xeb\x98\xd6\xd0\x1a\x1c\x97\x80\x94\x2d\xa2\x34\x85\x1e\xb9\x8c\xf6\x37\x24\x6b\xec\x81\xa6\x18\x1b\x52\x04\x17\x7d\x81\x32\x1b\x3e\xbd\xb7\x26\x1b\x6c\xf6\x52\x63\x2b\x1f\x33\x38\x3e\x6a\x55\x62\x93\xfe\xf7\xd1\x60\xab\x04\x1b\xea\x63\xad\xc9\x76\xbc\x4a\xd1\x8c\x32\x6e\x63\xa9\xe3\x13\x17\x78\x8b\x46\x89\x07\xd4\xf0\xb3\xc9\x33\x77\x8e\x19\xf8\xb7\xb3\xe1\x47\xa0\x32\x01\xa9\x64\xd7\xff\x88\x4b\x61\x01\x9b\xa3\xf9\x25\x72\x8c\x23\x6b\x12\x98\x12\x77\x7d\x18\x84\xbf\x0f\xcb\xb9\x3f\x8d\x92\x65\xea\xb6\x07\x82\x63\xd9\x40\x7a\x2a\x05\xa2\x92\x8a\xf5\x37\x7c\x5b\xfa\xe3\xee\xdb\x6e\x3b\xcc\x15\x15\xde\xfc\x2a\xb3\x3c\x75\x9b\x6d\x2b\xc7\xf1\x8c\x57\xdc\x2e\x20\xd3\x2e\x45\x4f\xb3\xdc\x62\xe2\x2f\x4f\xca\x50\x51\x6c\xc7\x78\xf9\x27\x9e\xe2\xf3\xf1\xad\x58\x45\x80\x27\xb7\x21\xf6\x17\x96\xfa\xac\xa8\x38\x78\x29\x8d\x8f\xdc\x2c\xdf\x44\xe0\x06\xed\x4a\xe9\xe5\xa5\x9c\xaa\x5c\x26\xdf\x83\xd4\x30\xb7\x6f\xa7\x75\x9e\xe5\x6f\xc2\x8f\xba\xfd\xc8\x8d\xd5\x7c\x9a\xbb\xdd\xf4\x2a\x3a\x23\x65\x51\x5a\x4e\xc5\xcd\x6a\x98\xdb\x57\x9b\xe8\xce\xd0\x39\xbe\x59\x98\xa6\xad\xbe\x2b\xcd\xc2\x68\xdf\x87\xe8\x79\x96\x7f\x1f\x42\x13\x97\x24\x7d\x2f\x5b\x5e\x21\x4d\x50\x9f\xb9\x9b\xea\xa5\xdc\xa4\xd6\x1a\x29\x62\xa0\xc4\x24\xc4\x8c\x08\xf3\xc3\xdb\x7f\x78\xfb\x0f\x6f\xff\x97\xf6\xf6\x17\x50\xf3\x93\xe1\x26\x83\x3a\x5c\xb2\x4f\xe3\xaf\xef\x67\xeb\x91\xc6\x19\x6a\x8d\x49\x90\xfa\x42\x84\xa2\xd7\x1e\x81\x69\x41\x75\x33\x3a\xb9\x81\x1f\x09\xc9\x5f\x1d\xa2\xda\x2f\x53\xa8\x19\x4a\x4b\xe7\xbe\xb2\xba\x42\x21\x8a\xb2\x9d\xcb\x1d\xcb\xb7\x06\x50\xb9\x37\x22\x15\xa2\x59\x6d\x31\xb5\xbb\x40\x89\x58\xbb\x4b\x55\xf4\x07\x47\xe4\xe4\xb7\xe6\x55\x8a\x0a\x2a\x19\xfa\xab\xbf\x7f\x63\x0a\x15\xae\xd1\x5d\x91\xbf\x67\x39\x89\x30\xa4\x84\x19\xf4\x48\x6f\x0f\x2a\x09\x37\xcb\x22\xe3\xe5\x66\xf9\x6a\x3a\x32\xd8\x03\x78\xb0\x2d\xe4\x96\x0b\xfe\xcd\xa7\xfa\xc5\xdd\x2b\x40\x90\x08\xf1\x66\x4e\x2a\x9a\x7e\x07\xab\x02\xe4\xd5\xbc\x6c\x55\x15\x02\xa6\x72\x69\x9b\xef\x48\xc4\x8f\xed\x41\xbd\xb8\x14\x6d\x9b\xd0\xdd\x18\x2b\xdb\xd7\x0c\x5a\xde\xb1\x2a\xaa\x47\xe4\xc3\x3e\x54\x9d\x1d\x5b\xc9\x7a\x03\xbf\x9e\xee\x0e\x13\xb7\xb2\xdb\x34\xf8\xdb\x39\xb7\x99\x7c\x27\xeb\x72\x03\xec\xc1\xbb\x62\x69\x95\xbb\xfd\x71\x19\x2e\x8f\xc5\xb5\xd1\x2a\x98\xfa\xda\x05\x05\xa1\x56\xde\x76\x75\x31\x8c\xa5\xb6\x6e\x3f\xa1\x56\xa4\x36\xdf\x60\x7c\xf4\x16\xc6\xde\xbc\x4f\x71\xf6\x26\xfe\xcb\x58\xef\xda\x01\x75\x29\x36\x2d\xff\xff\xa3\x8b\xad\x4d\xb0\xbf\x18\xb1\xdc\x43\xa5\x4a\xa9\x58\x17\xfb\x8b\x0b\x84\x3c\xcb\x62\x11\xd6\x63\x36\x6b\x8d\x11\x9e\x54\xf0\xc4\xc3\xd7\x38\x9d\xec\xcf\x4a\xa8\xd5\x8b\x58\x79\xf8\x7a\x10\xaa\xb3\xfa\xa2\x56\xa0\x66\x16\x25\x98\x85\xca\x9d\x7e\xbd\xbb\xb1\x45\xad\xf4\xe1\x54\x8b\x8f\x99\x2f\x6c\x51\x99\x80\x46\x46\x05\xcb\x05\x75\xc9\x08\x9f\x81\x44\x86\xc6\xd0\xb2\x9a\x56\xe0\x11\x8f\x14\x74\x9a\x9a\xc1\xef\x5b\xe5\xba\xe2\x59\xb7\x2a\xdb\xc5\x00\x6a\xc0\x2e\xa8\x05\x46\x25\x68\x34\x3c\x41\x50\xce\xb4\xb1\x52\x45\x2d\x50\xb9\x8e\x4f\x7b\x96\xa7\x58\x3c\xb7\xa5\xf4\xb1\xa8\xae\xd7\x2b\x6a\x83\xde\x8e\x42\x61\x2c\x8b\xbb\x1d\x94\x9b\xf0\x06\x5a\xae\x9b\x51\x99\xf0\x84\x5a\x84\x4c\x63\xa8\x08\x71\x39\x27\xf5\xda\x6b\xb1\xd4\x12\x00\xcb\x42\x7b\x15\xea\x9d\x4e\x43\x97\x51\x58\x57\x54\xb5\x57\x2b\x13\x79\x82\x49\x78\x54\xdc\x78\x87\x51\x0f\x98\xd6\xdf\x5f\x8b\x46\xa5\x88\x43\x1c\x4e\xbd\xec\x1a\xe1\x9f\x2b\xac\xe1\x23\xb2\xfc\xad\xef\x8a\x29\x7d\x6c\xab\x5b\x7b\x3d\x3a\x41\x80\xcb\x43\x9f\xf3\xc8\xf2\x11\xb6\x66\xbd\x16\xdb\x39\x6d\x32\x25\x59\xae\xb5\x5b\xf3\xf6\xb2\x36\x2c\xda\x90\xa6\x2c\xf9\xd7\xfb\x00\xc2\x3a\x9d\x26\x33\xad\xe6\x1a\x8d\x01\xb6\x40\xb6\x2c\xdb\x01\x4a\x00\x52\x00\x10\x0f\xd0\x7c\x12\x78\xee\xb9\xb6\xf0\xd0\x04\x2d\xb2\xb7\xaa\xd5\x25\x9e\xf0\xc0\x95\x08\x61\x4b\x2a\xcb\x67\x7c\xe3\x21\xb5\x70\xf1\x62\x72\xdf\xa7\x96\x42\xc0\x0a\x71\x8c\x62\xf6\x05\xa9\xe0\x72\x7e\x13\xc7\x76\xc5\xa0\x19\xf7\x4d\x2d\x2d\x8f\xba\x85\x48\x01\xe2\xc5\x02\xf9\x1b\x56\x78\xf1\x39\x0d\x94\x3e\x79\x42\x0d\x61\x9a\x7a\x0e\x27\x7c\x30\xd3\x86\x5e\x4a\x80\x1d\x76\x6c\xd1\xb5\x3f\x58\x1c\x26\x79\x92\xde\x8f\x2b\xd6\xff\xe5\x15\xcb\x5b\x0f\x8d\x3b\x64\xea\xcd\x09\x1b\x9b\xb2\x24\xd8\xbe\x23\xcb\xe9\x48\x62\x70\x76\x3b\xfc\xe3\xe2\xf6\x7e\x74\x3b\xfc\x78\x77\x7e\x71\x7f\x35\x3c\x3f\xbd\xba\x9f\x5c\x5e\x5f\xdc\x5f\x8f\xef\xaf\x4f\xff\xfd\x60\x37\xc0\xc5\xe9\x4d\x01\x71\x3e\xbc\x19\xdf\x5d\x5f\xdc\xde\x7f\xba\x98\x9c\x7f\x79\x9a\xd2\x6e\xb8\x1a\xc1\x4f\xc3\xab\xab\xe1\xd7\xe7\x09\xee\x86\xab\x11\xbc\x1a\x7e\xbe\xff\x74\x75\x37\xfe\xd2\x46\xa5\x65\xf2\xe2\xf4\xa6\xb0\xc0\x4f\x70\x9a\xfc\x99\x1b\x0b\x94\x31\xa5\x13\x2e\xe7\x62\xed\xce\xfa\xb5\xca\xab\xc7\xbb\xa2\x37\x22\xf6\x9b\x29\xe1\xc2\xc3\x43\x68\x53\xf6\x99\x42\xa2\xd0\xb8\x20\xe6\x22\x70\x92\xfb\x6b\x14\x9a\x22\xae\x34\xda\xb2\x5e\x6f\xb3\xdf\x8e\x26\x5f\x76\x1b\xed\xe4\xe4\xa4\x02\xd9\x69\x8d\x3a\xad\x9d\x80\x0d\x92\x3b\xed\x51\x27\xb9\x13\xb0\x41\x72\xdb\x38\x75\x3a\xdb\xb3\x1e\xb9\xe1\x3d\xdf\x96\x90\x51\xbb\xf0\xbd\x13\xbe\x53\x60\x46\xb9\xc0\xa4\x38\x85\x5b\x7a\x08\x03\x40\x3c\x61\x0d\xf9\xb6\x24\x8e\xc0\xe0\xb0\xd1\x2c\x11\x5e\x1a\xaf\xb8\xa9\xd2\x0c\x5f\xc2\x2b\x9a\x16\x32\xad\x1e\xf8\xe6\x29\x11\xfa\x1e\xe2\xa3\x60\x01\xb1\xef\x29\x11\xd1\xfc\x19\x31\xa9\xfa\x39\x47\x91\x4c\xf3\x9e\x18\xaf\x03\xac\x3d\xf3\x79\x86\x46\xc4\x8e\x1c\x4d\xf3\xf9\x32\xcc\xc5\x66\xea\xe6\x03\x66\x3d\x95\xf5\x8d\x63\x9b\xdd\x89\xa5\x0d\x42\xdd\x20\xf6\x91\x39\x07\x09\x1d\xd5\x45\x4f\xa5\xaf\x10\x81\xcb\x23\x05\xba\xb0\x97\x1b\x97\xe8\x53\xb3\x2c\x4c\x54\x4e\x11\x37\x45\xfc\x94\x46\x5f\xc0\x76\xf7\x16\x97\x4e\xa5\x66\x70\xdc\xfb\x7d\xfb\x69\xfc\x39\x01\xb5\x13\x21\x34\x9e\x26\x98\x2a\x7f\x24\x2e\xb8\x13\x7b\x5d\xbd\xa7\x97\x2e\x5b\x80\x90\x08\xd2\x22\xc5\x87\xdf\x7f\x7d\x5a\x8a\x2a\x75\x6c\x59\x6d\x30\xd8\x6a\xc1\xd9\xe2\x59\x8d\xad\xb8\xf0\xf7\x93\x70\x65\xa9\x5f\x04\xe2\x48\x8b\xca\x7c\x32\xf0\x8c\x58\x1b\xc2\x54\x99\xa9\x58\x83\xce\xa5\x0c\x8d\x26\x40\xcd\x5a\x32\x40\x99\x64\x8a\x4b\x6b\x80\x32\xad\x8c\xf1\x65\x3e\x47\xc1\xd4\x05\xa2\xcc\xf2\x07\xac\x8b\x51\x95\xf3\xc2\x67\x14\x60\x50\xcc\x60\x11\x32\xb2\x90\x5c\x0a\xb1\x95\x60\x9a\x03\xc8\xa5\x70\x4a\x28\xef\x0b\xee\x32\xb6\x9d\x89\xba\xb0\x8c\x8f\x2e\xf9\xe0\x4e\xec\x84\x1b\xff\xad\x46\xd1\x99\x84\x62\x46\x22\xaf\xf8\xf1\x43\x32\xa8\xb5\x7f\x3f\x2d\x54\x0c\x21\xb1\xc3\x7d\x2b\xf1\x6d\x10\x8e\x3d\x0d\x11\xf6\x65\x7c\x36\x12\xb4\x9d\x7c\x1c\x2c\x29\x61\x5f\xc6\x67\x23\xa3\xd8\xc9\x67\xe3\xa8\x6a\xe5\xf3\x44\xf4\x59\xe1\x34\x7c\xa5\xb1\xf7\x0d\xa1\xba\xa5\x4f\x26\xa3\xf8\xed\x00\xb8\x23\x37\x4e\x94\x14\xc9\xc2\xda\x8c\xb8\x99\xc1\xc9\xd1\xc9\x51\x2b\x1e\x0d\x9f\xe5\xb4\xa3\xc6\xc9\xc1\x11\xf1\xff\x95\x04\xbe\x2e\xd0\x2e\x50\xc3\xf9\xf0\x76\x5c\xbc\x40\xf8\x6d\x15\xd6\xed\xd7\x76\x3a\xba\x04\xa5\xdd\x31\xdf\x4e\x9b\x29\x6d\x4a\x45\xd5\xfb\xfb\x7f\x82\x7f\x50\x91\x87\x3b\xf7\xa9\x77\xeb\x6e\x3c\x65\xba\xa7\x42\xa8\x55\x77\xa8\xf9\x9c\xcb\x1d\x54\x95\x07\x18\xb8\x81\xfe\xe1\xa1\x50\x8c\x8a\x85\x32\xb6\xff\xe1\xe8\xc3\xd1\xe1\xf3\x5c\x6e\x43\x77\x6e\xf7\x1a\xed\x42\x25\x3b\xf8\x50\x27\x4e\xea\xa1\xcc\x60\x38\x9a\x5c\x0e\x6f\xc6\x07\x9f\x2f\x26\x07\xa3\xe1\x78\x52\x69\xdb\x3f\xe4\xb4\xdc\xf1\x33\x65\xd0\x57\xae\x62\xaf\xce\xca\x05\x97\x9f\xbf\xe2\x94\x66\xd9\x2f\xb5\x40\x14\x3b\xf7\xc1\x64\xc8\x38\x15\xfe\x5b\x2b\x5f\xea\xa1\x55\xcb\xf9\x74\xed\xa8\x94\x48\x77\x8e\xd4\xc4\xc7\x29\x93\x4f\xcd\xda\x58\x4c\x7d\x9c\x6c\xf0\x8f\x21\x60\xc3\x13\x12\x58\x2d\x50\x06\xdb\xa6\x2a\xc1\x92\x07\x35\x3e\xac\x84\xf2\x48\xc5\xeb\x34\x49\xb9\x84\x4b\x97\x96\xcf\x68\xf9\x8d\x4f\xab\xb5\xfd\x92\x83\xf8\x66\xe0\x64\xec\x3a\x19\xbb\x97\x1f\x4b\x62\xb7\x17\xe3\x89\xdf\x3a\xb1\xa1\x06\x32\xff\x3d\x54\x39\xff\x73\xa2\xa4\x6f\xbd\x9e\xa3\x0d\x65\x8b\xd0\x63\xfd\xb7\x5f\xb6\xf8\xd2\x8c\x93\x5c\x8b\x40\x60\x10\x3e\x68\x6a\xe4\x10\x87\x7f\x2b\xc9\x5e\xa9\xd8\xc8\xb9\x5a\x60\x3c\x90\x9b\xfd\xfd\x30\xd3\x4a\x5a\x94\x89\xd3\x46\x82\x99\x50\x6b\xdc\xde\x1a\x39\x27\x09\x37\x4b\x9f\x20\x91\xc3\x66\x5b\x7f\x37\xe7\x87\x09\x37\xb6\xda\x80\x77\xb7\x57\x21\x19\x0b\x22\xfa\xad\x78\x77\xf9\x9a\xa5\xe6\x8d\x95\x56\xcb\x9a\xb8\x53\xfd\xd4\x37\xa3\x87\x73\x33\x36\x9e\xbb\x45\x30\x25\x1f\xd0\x3f\x1c\x5a\x05\xa7\xee\xc0\xda\x22\x5b\xb4\xa9\xa7\xf4\xf1\x4c\x28\xb6\x74\xe4\xae\x37\xef\xcc\xb1\x33\x13\xc6\x68\x7c\x82\x7f\xf1\x98\x71\xbd\x86\x11\x6a\xde\xe2\x3c\x26\x40\x39\x92\x01\x30\xd2\x6c\x56\x01\x0b\x5a\x4c\xa9\x25\x47\xaf\xa4\x27\x29\x85\x6c\xb4\x86\xea\x66\xa3\x4b\xc3\x95\x9a\x6f\x87\xb6\x90\x2b\x08\xf5\xc4\xf9\x56\xee\x05\x35\x0b\x91\x32\xc6\x83\xe7\x88\x79\x41\xc2\x4f\x22\xd4\xbc\x19\x6d\x6b\x34\xa0\x4c\x8a\x20\xa1\xeb\x5d\x14\xab\xec\xc9\x01\x0e\x7a\xbf\x7a\x58\xd6\xe8\xe7\xab\x3e\x42\xfa\xef\xf8\x7f\x80\xce\xb4\xde\xf8\xc7\xd1\x74\xfa\xff\x51\x4e\xd6\x01\x6b\xc0\x97\x49\xa7\x0f\x9d\x6e\xaf\x73\xd0\x9c\x2d\xb8\x75\xfa\x1b\x78\x00\x9d\x8f\x97\xe3\x3f\x1c\x96\xdf\x10\x1b\x88\x00\x9d\xf3\xd1\x5d\x9c\xdd\x9e\xbb\xf9\x7a\x7f\x79\xb3\x03\xf7\xe6\xeb\xfd\xf0\x6e\x52\x01\x34\xe6\xff\xb9\x21\x63\xa2\x98\x83\x2c\x22\x65\x48\x56\xc3\xae\x2c\x5f\x72\xa0\x28\x28\x40\x2e\xb9\xad\xbe\xd3\x09\xcf\x5f\xc6\x65\x6d\xd7\x67\x07\xc0\xb2\x3c\xfe\xaa\x5e\x89\x0e\xca\x97\x0c\xbb\xd0\x2a\x9f\x2f\xb2\xdc\x46\xa0\x3f\xce\x48\x5d\xb4\x7f\x96\x7f\xff\xe7\xbb\xfa\x48\xe3\x9a\xd0\x6a\xb1\x94\x4b\xc2\xa5\xf3\xc2\xb2\x54\xdd\x29\xbe\x36\x73\x54\xba\xdd\xee\xbb\xff\x0d\x00\x00\xff\xff\x8d\x74\x61\xa3\xed\x3b\x00\x00"),
		},
		"/perfload-deployment.yaml": &vfsgen۰CompressedFileInfo{
			name:             "perfload-deployment.yaml",
			modTime:          time.Date(2019, 1, 1, 0, 1, 0, 0, time.UTC),
			uncompressedSize: 646,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x91\xcd\x8a\xdc\x40\x0c\x84\xef\x7e\x0a\x3d\x40\x7a\xd7\x1e\xd8\xc3\x36\xf8\x10\x08\xe4\x92\xc3\x40\x20\x77\xb9\x5d\xeb\x34\xee\xbf\x48\xed\x6c\x66\x43\xde\x3d\xf4\xce\x64\xe2\x61\x74\x91\xa8\xf2\x67\x95\x65\x2e\xfe\x1b\x44\x7d\x4e\x96\xf0\xab\x22\xb5\x51\x1f\x7f\x0e\x13\x2a\x0f\xdd\xea\xd3\x6c\xe9\x13\x4a\xc8\xa7\x88\x54\xbb\x88\xca\x33\x57\xb6\x1d\x51\xe0\x09\x41\xdb\x44\xc4\xa5\x58\x0a\x99\xe7\x0a\xad\x1d\x51\xe2\x08\x4b\x05\xf2\x62\x9a\x7a\x51\xb4\xb0\x83\xa5\x95\x5f\x56\xee\xb4\xc0\x35\x58\x50\x82\x77\xac\x96\xfa\x8e\x48\x11\xe0\x6a\x96\xf3\x6b\x23\x57\xf7\xfd\xcb\x6e\xcf\xfd\xa6\x8a\x58\x02\x57\x5c\x80\x5d\xbe\x56\xe1\x86\xbd\xa7\x89\xfe\xc5\x68\xe5\x72\xaa\xec\x13\xe4\x4a\x18\x62\x59\x76\xbc\x21\x33\x49\x5e\x21\x3a\xbe\x7f\x85\xe9\x3f\x9c\xfb\x70\xe9\x07\x7b\x78\xee\x9f\x0f\x7b\xa0\xe6\xe2\xdd\xd8\x6e\xd1\x96\xde\x58\x82\x1f\x9b\x17\xcc\x86\xdd\xaa\x23\x87\xb0\x37\x23\x54\x79\x81\x51\xff\x86\xf1\x69\xb8\x01\x5f\xb3\xbc\x87\x18\xf6\x62\x91\x3c\x6f\x0e\x46\xb8\x62\x1c\xfa\xfe\xea\xf9\xc8\x0b\x2c\x4d\x9c\xde\xd8\xbb\x90\xb7\xf9\xb1\xc5\x69\x77\xb0\xfd\xc3\xf0\xd0\x9b\x29\xe4\xe5\xf6\xf1\xe3\x16\xc2\x31\x07\xef\x4e\x96\x3e\x86\x57\x3e\xe9\xd5\x3f\xff\x5c\xe5\xb4\x08\x12\xfe\x67\x16\x68\xde\xc4\x41\x2d\xfd\xfe\x73\x51\x2b\x24\xfa\xc4\xd5\xe7\xf4\x59\xd8\xe1\x08\xf1\x79\xfe\x0a\x97\xd3\xac\x96\x9e\x3a\x63\x4c\xf7\x37\x00\x00\xff\xff\x84\x8b\x5b\xaa\x86\x02\x00\x00"),
		},
		"/pertest2-kafkatopic.yaml": &vfsgen۰CompressedFileInfo{
			name:             "pertest2-kafkatopic.yaml",
			modTime:          time.Date(2019, 1, 1, 0, 1, 0, 0, time.UTC),
			uncompressedSize: 184,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcd\x31\x0e\xc2\x30\x0c\x85\xe1\x3d\xa7\xf0\x05\x5a\x54\xd8\x72\x00\x16\x36\x84\xd8\x1f\xa9\x2b\xac\xa6\x89\xe5\xb8\x0c\x9c\x1e\x05\x89\x8d\xd1\x9f\x7e\xeb\x41\xe5\xce\xd6\xa4\x96\x48\x2b\x96\x15\xe3\x03\xe5\x0d\x49\xb9\xee\xf3\x28\xf5\xf0\x9a\x90\xf5\x89\x29\xac\x52\xe6\x48\x97\xde\xdc\xaa\x4a\x0a\x1b\x3b\x66\x38\x62\x20\x2a\xd8\x38\x92\xb2\x2d\xce\xcd\x8f\xa1\x29\xa7\xee\x29\xef\xcd\xd9\xae\xbc\xf4\xeb\xd7\x7d\x87\xfe\x7c\x11\x29\xcc\xc5\xa5\x96\x16\xe9\x14\x88\x8c\x35\x4b\x42\x97\x33\x92\x57\xeb\x3c\x0c\x43\xf8\x04\x00\x00\xff\xff\x47\x23\x10\x18\xb8\x00\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/cert.yaml"].(os.FileInfo),
		fs["/kafka-envoyfilter.yaml"].(os.FileInfo),
		fs["/kafka-kafkacluster.yaml"].(os.FileInfo),
		fs["/perfload-deployment.yaml"].(os.FileInfo),
		fs["/pertest2-kafkatopic.yaml"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
